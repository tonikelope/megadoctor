/*
 __  __ _____ ____    _    ____   ___   ____ _____ ___  ____  
|  \/  | ____/ ___|  / \  |  _ \ / _ \ / ___|_   _/ _ \|  _ \ 
| |\/| |  _|| |  _  / _ \ | | | | | | | |     | || | | | |_) |
| |  | | |__| |_| |/ ___ \| |_| | |_| | |___  | || |_| |  _ < 
|_|  |_|_____\____/_/   \_\____/ \___/ \____| |_| \___/|_| \_\
                                                              
by tonikelope

 */
package com.tonikelope.megadoctor;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Set;

/**
 *
 * @author tonikelope
 */
public class MoveNodeToAnotherAccountDialog extends javax.swing.JDialog implements Refresheable {

    private volatile long _free_space = 0;

    public String getSelected_email() {
        return selected_email;
    }

    public boolean isOk() {
        return _ok;
    }

    private boolean _ok = false;

    private String selected_email = null;

    public MoveNodeToAnotherAccountDialog(java.awt.Frame parent, boolean modal, Set<String> skip_emails, boolean move) {
        super(parent, modal);
        initComponents();

        Helpers.JTextFieldRegularPopupMenu.addRefreshableTo(account_stats_textarea, this);

        vamos_button.setEnabled(false);

        ArrayList<String> emails = new ArrayList<>();

        for (String email : Main.MEGA_ACCOUNTS.keySet()) {
            emails.add(email);
        }

        Collections.sort(emails);

        for (String email : emails) {
            if (!skip_emails.contains(email)) {
                email_combobox.addItem(email);
            }
        }

        vamos_button.setText(move ? "MOVE" : "COPY");

        vamos_button.setEnabled(true);

        email_comboboxItemStateChanged(null);

        Helpers.smartPack(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        email_combobox = new javax.swing.JComboBox<>();
        vamos_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        account_stats_textarea = new javax.swing.JTextArea();
        progress = new javax.swing.JProgressBar();
        free_space = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("DESTINATION ACCOUNT");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        email_combobox.setFont(new java.awt.Font("Noto Sans", 0, 24)); // NOI18N
        email_combobox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        email_combobox.setDoubleBuffered(true);
        email_combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                email_comboboxItemStateChanged(evt);
            }
        });

        vamos_button.setBackground(new java.awt.Color(0, 153, 0));
        vamos_button.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        vamos_button.setForeground(new java.awt.Color(255, 255, 255));
        vamos_button.setText("LET'S GO");
        vamos_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vamos_button.setDoubleBuffered(true);
        vamos_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vamos_buttonActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(700, 400));

        account_stats_textarea.setEditable(false);
        account_stats_textarea.setBackground(new java.awt.Color(102, 102, 102));
        account_stats_textarea.setColumns(20);
        account_stats_textarea.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        account_stats_textarea.setForeground(new java.awt.Color(255, 255, 255));
        account_stats_textarea.setRows(5);
        account_stats_textarea.setDoubleBuffered(true);
        jScrollPane1.setViewportView(account_stats_textarea);

        free_space.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        free_space.setText("---");
        free_space.setDoubleBuffered(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(free_space)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(email_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vamos_button))
                    .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(vamos_button)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(email_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(free_space)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vamos_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vamos_buttonActionPerformed
        // TODO add your handling code here:
        _ok = true;
        selected_email = (String) email_combobox.getSelectedItem();
        dispose();
    }//GEN-LAST:event_vamos_buttonActionPerformed

    private void email_comboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_email_comboboxItemStateChanged
        // TODO add your handling code here:
        String email = (String) email_combobox.getSelectedItem();
        if (!email.isBlank() && email_combobox.isEnabled()) {

            email_combobox.setEnabled(false);
            vamos_button.setEnabled(false);
            account_stats_textarea.setText("");
            free_space.setText("");
            progress.setIndeterminate(true);
            progress.setVisible(true);

            Helpers.threadRun(() -> {

                Main.MAIN_WINDOW.login(email);

                String stats = Main.MAIN_WINDOW.currentAccountStats();

                _free_space = Helpers.getAccountFreeSpace(email);

                Main.MAIN_WINDOW.parseAccountNodes(email);

                Helpers.GUIRun(() -> {

                    account_stats_textarea.setText("[" + email + "] \n\n" + stats + "\n\n");
                    account_stats_textarea.setCaretPosition(0);
                    free_space.setText(Helpers.formatBytes(_free_space));
                    email_combobox.setEnabled(true);
                    vamos_button.setEnabled(true);
                    progress.setVisible(false);
                    Helpers.smartPack(this);

                });
            });
        }
    }//GEN-LAST:event_email_comboboxItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (!progress.isVisible()) {
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea account_stats_textarea;
    private javax.swing.JComboBox<String> email_combobox;
    private javax.swing.JLabel free_space;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton vamos_button;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refresh() {
        Helpers.GUIRun(() -> {
            email_comboboxItemStateChanged(null);
        });
    }

    @Override
    public void enableR(boolean enable) {
        Helpers.GUIRun(() -> {

            progress.setVisible(!enable);
            email_combobox.setEnabled(enable);

        });
    }
}
